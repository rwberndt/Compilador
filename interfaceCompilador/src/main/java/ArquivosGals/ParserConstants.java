package ArquivosGals;

public interface ParserConstants
{
    int START_SYMBOL = 35;

    int FIRST_NON_TERMINAL    = 35;
    int FIRST_SEMANTIC_ACTION = 62;

    int[][] PARSER_TABLE =
            {
                    { -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1,  0, -1, -1,  0, -1,  0,  0 },
                    { -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1,  4,  4,  4,  4,  4, -1, -1, -1, -1,  4, -1,  4, -1, -1, -1, -1, -1, -1,  4, -1, -1, -1, -1, -1, -1,  4, -1,  4, -1, -1,  4, -1, -1 },
                    { -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 18 },
                    { -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, 22, -1, -1, 20, -1, 21, 21 },
                    { -1, 27, 27, 27, 27, 27, -1, -1, -1, -1, 27, -1, 27, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, 27, -1, 27, -1, -1, 27, -1, -1 },
                    { -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, 24, -1, -1, 24, -1, 24, 24 },
                    { -1, -1, -1, -1, -1, -1, 28, 28, 28, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1 },
                    { -1, 31, 31, 31, 31, 31, -1, -1, -1, -1, 31, -1, 31, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, 33, -1, 34, -1, -1, 32, -1, -1 },
                    { -1, 35, 35, 35, 35, 35, -1, -1, -1, -1, 35, -1, 35, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, 36, 36, 36, -1, -1, 36, -1, 37, 37, 37, 37, 37, 37, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 39, 40, 41, 42, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, 44, 44, 44, 44, 44, -1, -1, -1, -1, 44, -1, 44, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, 45, 45, 45, -1, -1, 45, 47, 45, 45, 45, 45, 45, 45, 46, -1, -1, 45, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1 },
                    { -1, 48, 48, 48, 48, 48, -1, -1, -1, -1, 48, -1, 48, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, 49, 49, 49, -1, -1, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 51, 49, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1 },
                    { -1, 52, 53, 54, 55, 56, -1, -1, -1, -1, 57, -1, 59, -1, -1, -1, -1, -1, -1, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1,  2, -1, -1,  3, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 11, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, 14, -1, -1 },
                    { 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 25, 25, -1, 26, -1, -1, 26, -1, 26, 26 },
                    { -1, -1, -1, -1, -1, -1,  6, -1, -1, -1, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                    { -1, -1, -1, -1, -1, -1, -1,  8,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
            };

    int[][] PRODUCTIONS =
            {
                    { 77, 83, 45, 78 },
                    {  2, 84, 56 },
                    {  7, 36 },
                    {  0 },
                    { 44, 76, 60 },
                    {  0 },
                    {  7, 37 },
                    { 36, 10, 44, 61 },
                    { 86 },
                    { 87,  9, 28, 44, 88 },
                    { 28, 11, 44, 12, 90, 45, 57 },
                    { 26, 91 },
                    { 92, 25, 45, 26, 91 },
                    { 24, 93, 11, 44, 12,  9, 28, 58, 94, 45, 26, 95 },
                    { 32 },
                    { 27 },
                    { 31, 11, 36, 89, 12 },
                    { 33, 11, 37, 12 },
                    { 34, 11, 37, 12, 79 },
                    { 38 },
                    { 41 },
                    { 42 },
                    { 39 },
                    { 40 },
                    { 43,  8, 59 },
                    {  0 },
                    { 45 },
                    { 47, 46 },
                    {  0 },
                    { 23, 47, 80, 46 },
                    { 30, 47, 81, 46 },
                    { 48 },
                    { 32, 73 },
                    { 27, 74 },
                    { 29, 47, 75 },
                    { 51, 49 },
                    {  0 },
                    { 50, 71, 51, 72 },
                    { 14 },
                    { 15 },
                    { 16 },
                    { 17 },
                    { 18 },
                    { 19 },
                    { 53, 52 },
                    {  0 },
                    { 20, 53, 63, 52 },
                    { 13, 53, 64, 52 },
                    { 55, 54 },
                    {  0 },
                    { 21, 55, 65, 54 },
                    { 22, 55, 66, 54 },
                    {  2, 85 },
                    {  3, 67 },
                    {  4, 68 },
                    {  5 },
                    {  6, 82 },
                    { 11, 44, 12 },
                    { 20, 55 },
                    { 13, 55, 70 }
            };

    String[] PARSER_ERROR =
            {
                    "",
                    "encontrado {0} esperado EOF",             // "esperado fim de programa",
                    "encontrado {0} esperado indentificador", // "esperado identificador",
                    "encontrado {0} esperado constante_int",            //"esperado constante_int",
                    "encontrado {0} esperado constante_float",      //"esperado constante_float",
                    "encontrado {0} esperado constante_bin",    //"esperado constante_bin",
                    "encontrado {0} esperado constante_string",              //"esperado constante_string",
                    "esperado ,",
                    "esperado ;",
                    "esperado :",
                    "esperado =",
                    "esperado (",
                    "esperado )",
                    "esperado -",
                    "esperado ==",
                    "esperado !=",
                    "esperado <",
                    "esperado <=",
                    "esperado >",
                    "esperado >=",
                    "esperado +",
                    "esperado *",
                    "esperado /",
                    "esperado and",
                    "esperado check",
                    "esperado else",
                    "esperado end",
                    "esperado false",
                    "esperado if",
                    "esperado not",
                    "esperado or",
                    "esperado read",
                    "esperado true",
                    "esperado write",
                    "esperado writeln",
                    "encontrado {0} esperado identificador check if read write writeln",    //"<program> inv�lido",
                    "encontrado {0} esperado identificador",                                //"<lista_de_identificadores> inv�lido",
                    "encontrado {0} esperado expressao",                                    //<lista_de_expressoes> inv�lido",
                    "encontrado {0} esperado identificador",                                //"<atribuicao> inv�lido",
                    "encontrado {0} esperado if",                                           //"<selecao> inv�lido",
                    "encontrado {0} esperado check",                                        //"<repeticao> inv�lido",
                    "encontrado {0} esperado read",                                         //"<entrada_de_dados> inv�lido",
                    "encontrado {0} esperado write writeln",                                //"<saida_de_dados> inv�lido",
                    "encontrado {0} esperado identificador check if read write writeln",    //"<comando> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<expressao> inv�lido",
                    "encontrado {0} esperado identificador check if read write writeln",    //"<lista_de_comandos> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<expressao_> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<elemento> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<relacional> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<relacional_> inv�lido",
                    "encontrado {0} esperado == != < <= > >=",                    //"<operador_relacional> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<aritmetica> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<aritmetica_> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<termo> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<termo_> inv�lido",
                    "encontrado {0} esperado expressao",                                    //"<fator> inv�lido",
                    "encontrado {0} esperado , = )",                              //"<lista_de_identificadores1> inv�lido",
                    "encontrado {0} esperado else end",                           //"<selecao1> inv�lido",
                    "encontrado {0} esperado false true",                         //"<repeticao1> inv�lido",
                    "encontrado {0} esperado  EOF identificador check else end if read write writeln", //"<lista_de_comandos1> inv�lido",
                    "encontrado {0} esperado , )",                                //"<lista_de_expressoes1> inv�lido",
                    "encontrado {0} esperado ; :",                                //"<atribuicao1> inv�lido"
            };
}
